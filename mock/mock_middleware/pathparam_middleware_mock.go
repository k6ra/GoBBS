// Code generated by MockGen. DO NOT EDIT.
// Source: interface/middleware/pathparam_middleware.go

// Package mock_middleware is a generated GoMock package.
package mock_middleware

import (
	middlewarehelper "GoBBS/interface/middleware/middlewarehelper"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPathParam is a mock of PathParam interface.
type MockPathParam struct {
	ctrl     *gomock.Controller
	recorder *MockPathParamMockRecorder
}

// MockPathParamMockRecorder is the mock recorder for MockPathParam.
type MockPathParamMockRecorder struct {
	mock *MockPathParam
}

// NewMockPathParam creates a new mock instance.
func NewMockPathParam(ctrl *gomock.Controller) *MockPathParam {
	mock := &MockPathParam{ctrl: ctrl}
	mock.recorder = &MockPathParamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPathParam) EXPECT() *MockPathParamMockRecorder {
	return m.recorder
}

// Parse mocks base method.
func (m *MockPathParam) Parse(arg0 middlewarehelper.HandlerFunc) middlewarehelper.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parse", arg0)
	ret0, _ := ret[0].(middlewarehelper.HandlerFunc)
	return ret0
}

// Parse indicates an expected call of Parse.
func (mr *MockPathParamMockRecorder) Parse(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parse", reflect.TypeOf((*MockPathParam)(nil).Parse), arg0)
}
